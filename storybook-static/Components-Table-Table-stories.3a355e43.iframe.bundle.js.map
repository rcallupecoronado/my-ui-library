{"version":3,"file":"Components-Table-Table-stories.3a355e43.iframe.bundle.js","mappings":";;;;;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;;;;AAIA;;;AAKA","sources":["webpack://my_ui_library/./src/Components/Table/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TableProps } from \"./Table.types\";\r\n\r\nconst StyledTable = styled.table<TableProps>`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    overflow-x: auto;\r\n    display: block;\r\n    background-color: ${({ backgroundColor, disabled, disabledBackgroundColor }) =>\r\n        disabled ? disabledBackgroundColor || \"#e0e0e0\" : backgroundColor || \"white\"};\r\n    color: ${({ textColor }) => textColor || \"black\"};\r\n    opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\r\n    cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"default\")};\r\n`;\r\n\r\nconst StyledTh = styled.th<TableProps>`\r\n    background-color: ${({ headerBackgroundColor }) => headerBackgroundColor || \"#f4f4f4\"};\r\n    color: ${({ headerTextColor }) => headerTextColor || \"black\"};\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    text-align: left;\r\n`;\r\n\r\nconst StyledTd = styled.td`\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n`;\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n    headers,\r\n    rows,\r\n    backgroundColor,\r\n    textColor,\r\n    headerBackgroundColor,\r\n    headerTextColor,\r\n    disabled,\r\n    disabledBackgroundColor,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledTable\r\n            {...props}\r\n            aria-label=\"Data Table\"\r\n            backgroundColor={backgroundColor}\r\n            textColor={textColor}\r\n            headers={headers}\r\n            rows={rows}\r\n            disabled={disabled}\r\n            disabledBackgroundColor={disabledBackgroundColor}\r\n        >\r\n            <thead>\r\n                <tr>\r\n                    {headers.map((header, index) => (\r\n                        <StyledTh\r\n                            key={index}\r\n                            headers={headers}\r\n                            rows={rows}\r\n                            headerBackgroundColor={headerBackgroundColor}\r\n                            headerTextColor={headerTextColor}\r\n                        >\r\n                            {header}\r\n                        </StyledTh>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows.map((row, rowIndex) => (\r\n                    <tr key={rowIndex}>\r\n                        {row.map((cell, cellIndex) => (\r\n                            <StyledTd key={cellIndex}>{cell}</StyledTd>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n    );\r\n};\r\n\r\nexport default Table;"],"names":[],"sourceRoot":""}